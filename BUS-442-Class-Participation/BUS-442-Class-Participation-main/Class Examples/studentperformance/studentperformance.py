# Form implementation generated from reading ui file 'studentperformance.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox, QTableWidgetItem
import pymysql as mdb

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.btnInsert = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnInsert.setGeometry(QtCore.QRect(280, 260, 75, 23))
        self.btnInsert.setObjectName("btnInsert")
        self.btnDisplay = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnDisplay.setGeometry(QtCore.QRect(430, 260, 75, 23))
        self.btnDisplay.setObjectName("btnDisplay")
        self.lblStudentID = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblStudentID.setGeometry(QtCore.QRect(260, 70, 101, 16))
        self.lblStudentID.setObjectName("lblStudentID")
        self.txtStudentID = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtStudentID.setGeometry(QtCore.QRect(370, 70, 113, 20))
        self.txtStudentID.setObjectName("txtStudentID")
        self.txtStudentName = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtStudentName.setGeometry(QtCore.QRect(370, 120, 113, 20))
        self.txtStudentName.setObjectName("txtStudentName")
        self.lblStudentName = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblStudentName.setGeometry(QtCore.QRect(260, 120, 101, 16))
        self.lblStudentName.setObjectName("lblStudentName")
        self.txtStudentScore = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtStudentScore.setGeometry(QtCore.QRect(370, 170, 113, 20))
        self.txtStudentScore.setObjectName("txtStudentScore")
        self.lblStudentScore = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblStudentScore.setGeometry(QtCore.QRect(260, 170, 101, 16))
        self.lblStudentScore.setObjectName("lblStudentScore")
        self.studentTableWidget = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.studentTableWidget.setGeometry(QtCore.QRect(260, 310, 256, 192))
        self.studentTableWidget.setObjectName("studentTableWidget")
        self.studentTableWidget.setColumnCount(0)
        self.studentTableWidget.setRowCount(0)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.connection = self.createdbconnection()

        if(self.connection):
            self.add_data("studentdata.txt")

        self.btnInsert.clicked.connect(self.insert_data)

        self.btnDisplay.clicked.connect(self.display_data)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.btnInsert.setText(_translate("MainWindow", "Insert Data"))
        self.btnDisplay.setText(_translate("MainWindow", "Display Data"))
        self.lblStudentID.setText(_translate("MainWindow", "Enter Student ID"))
        self.lblStudentName.setText(_translate("MainWindow", "Enter Student Name"))
        self.lblStudentScore.setText(_translate("MainWindow", "Enter Student Score"))

    def createdbconnection(self):
        try:
            connectionobj = mdb.connect(
                host = "localhost", user = "testuser", password = "testuser", database = "studentperformancedb")
            
            print("Connected to DB")
            return connectionobj
        except Exception as e:
            print("Error connecting to DB")
            print(e)
            return None
    

    def insert_data(self):
        try:
            student_id = self.txtStudentID.text()
            student_name = self.txtStudentName.text()
            student_score = self.txtStudentScore.text()
            # add validation

            # Create a cursor object
            cursor = self.connection.cursor()
            cursor.execute(
                "insert into studentperformance (studentid, studentname, studentscore) values (%s, %s, %s)", 
                [student_id, student_name, student_score])
        
        except Exception as e:
            print("Error inserting data")
            print(e)

    def get_performance(self, data):
        if(data > 90):
            return "A"
        elif(data > 80):
            return "B"
        elif(data > 70):
            return "C"
        elif(data > 60):
            return "D"
        else: 
            return "F"
        
    def display_data(self):
        try:
            cursor = self.connection.cursor()
            cursor.execute("select * from studentperformance")

            results = cursor.fetchall()

            #finding number of rows
            row_count = len(results)

            #finding number of columns
            column_count = len(cursor.description)

            # Set row count
            self.studentTableWidget.setRowCount(row_count)
            # Set column count
            self.studentTableWidget.setColumnCount(column_count)
            # Add column headers to the table
            column_name_list = ['Id', 'Name', 'Performance']
            self.studentTableWidget.setHorizontalHeaderLabels(column_name_list)

            # enumerate(results) helps access the row number and the row data
            # row index and column index start at 0
            for rowindex, rowdata in enumerate(results):
                for columnindex, data in enumerate(rowdata):
                    if(columnindex == 2):
                        performance = self.get_performance(data)
                        self.studentTableWidget.setItem(rowindex, columnindex, QTableWidgetItem(str(performance)))
                    else:
                        self.studentTableWidget.setItem(rowindex, columnindex, QTableWidgetItem(str(data)))
        
        except Exception as e:
            print("Error displaying data")
            print(e)

    def add_data(self, file_name):
        try:
            cursor = self.connection.cursor()
            with open(file_name, "r") as fname:
                for line in fname:
                    data_lst = line.strip().split(",")
                    cursor.execute(
                        "insert into studentperformance (studentid, studentname, studentscore) values (%s, %s, %s)", 
                        [data_lst[0], data_lst[1], data_lst[2]])
                    self.connection.commit()
                    print("Added data to the table")
        except Exception as e:
            print(e)
            print("Error adding data to the table")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
